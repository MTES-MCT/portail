version: 2.1

executors:
  hugo:
    docker:
      - image: cibuilds/hugo
    working_directory: ~/project/portail

jobs:
  import:
    executor: hugo
    environment: 
      LIST_RESULTS: /tmp/list-results
      BETAGOUV: /tmp/betagouv
    steps:
      - checkout
      - attach_workspace:
          at: ~/project/portail
      - run: mkdir -p $LIST_RESULTS
      - run: mkdir -p $BETAGOUV
      - run: git clone https://github.com/betagouv/beta.gouv.fr.git $BETAGOUV
      - run: 
          name: List mtes startups from beta.gouv.fr
          command: find $BETAGOUV/content/_startups -type f -name "*.md" -exec grep -l 'mtes' {} \; > $LIST_RESULTS/startups.txt
      - run: 
          name: List MTES authors from beta.gouv.fr
          command: find $BETAGOUV/content/_authors -type f -name "*.md" -exec grep -l 'MTES' {} \; > $LIST_RESULTS/authors.txt
      - run: 
          name: List authors by mtes startup
          command: |
            while read -r line; do
              startup_file="$line"
              echo "$startup_file"
              filename=$(basename "$startup_file")
              startup="${filename%.*}"
              find $BETAGOUV/content/_authors -type f -name "*.md" -exec grep -l "$startup" {} \; >>  $LIST_RESULTS/authors.txt
            done < $LIST_RESULTS/startups.txt
      - run:
          name: Remove startup md files in repo
          command: |
              cd src/content/startup
              mv _index.md _index.md.bak
              find . -type f -name "*.md" -delete
              mv _index.md.bak _index.md
              find src/static/images/startups -type f -name "*.(jpg|png)" -delete
      - run:
          name: Copy startups from betagouv to startup in repo
          command: |
              while read -r line; do
                cp "$line" src/content/startup
                find $BETAGOUV/img/startups -type f -name "*.(jpg|png)" -exec cp {} src/static/images/startups \;
              done < $LIST_RESULTS/startups.txt
      - run:
          name: Remove people md files in repo
          command: |
              cd src/content/people
              mv _index.md _index.md.bak
              find . -type f -name "*.md" -delete
              mv _index.md.bak _index.md
              find src/static/images/people -type f -name "*.(jpg|png)" -delete
      - run:
          name: Copy authors from betagouv to people in repo
          command: |
              while read -r line; do
                cp "$line" src/content/people
                filename=$(basename "$line")
                author="${filename%.*}"
                find $BETAGOUV/img/authors -type f -name "*.(jpg|png)" -exec cp {} src/static/images/people \;
              done < $LIST_RESULTS/authors.txt
      - run:
          name: Deploy to repo
          command: |
            git config credential.helper 'cache --timeout=120'
            git config user.email "<circleci>"
            git config user.name "CircleCi"
            status=$(git status -s)
            empty=''
            if [ "$status" = "$empty" ]; then 
                echo "Pas de modifications dans src. Pas de deploy."
                exit 0
            else
                git add .
                git commit -m "Update site from circleci"
                git push origin master
            fi
      - store_artifacts:
          path: /tmp/list-results
          destination: raw-list-results
  build:
    executor: hugo
    steps:
      - checkout
      - run:
          name: Build Website With Hugo
          command: HUGO_ENV=production hugo -v -s src/
      - run:
          name: Test Website
          command: htmlproofer src/docs --allow-hash-href --check-html --empty-alt-ignore --disable-external  
      - run:
          name: Deploy to repo
          command: bash deploy_to_repo.sh
workflows:
  version: 2
  weekly-import:
    triggers:
      - schedule: 
          cron: "0 0 * * 0" # every sunday
          filters:
            branches:
              only: master
    jobs:
      - import:
          filters:
            branches:
              only: master
  main:
    jobs:
      - import
      - build:
          requires:
            - import
          filters:
            branches:
              only: master